easyblock = 'PythonBundle'

name = 'ESMPy'
version = '8.8.0'

homepage = 'https://earthsystemmodeling.org/esmpy'
description = "Earth System Modeling Framework (ESMF) Python Interface"

toolchain = {'name': 'foss', 'version': '2024a'}

builddependencies = [
    ('pytest', '8.3.3'),
]
dependencies = [
    ('Python', '3.12.3'),
    ('SciPy-bundle', '2024.05'),
    ('ESMF', version),
]

# downloads of data files from data.earthsystemmodeling.org are failing at the
# time of writting, switch to github.com:
_switch_data_url_regex = r"s/^\(DATA_URL.*earthsystemmodeling.org\)/# \1/;s/# \(DATA_URL.*github.com\)/\1/"
#_switch_data_url_regex = r"s/^\(DATA_URL.*earthsystemmodeling.org\)/# \1/;s/#.*\(http.*github.com/\)/\1/"

#_pre_test_cmds = [
#    "sed -i '%s' src/esmpy/util/cache_data.py" % _switch_data_url_regex,
#    "unset ESMPY_DATA_DIR",
#    "export ESMPY_DATA_NEW_DIR=/tmp",
#    "",
#]
_dataurlsed = " ".join([
	"sed -ie 's/^\(DATA_URL.*earthsystemmodeling.org\)/#\1/'",
	"-e 's|# \(DATA_URL.*github.com\)|DATA_URL = %(builddir)s/esmf-test-data-%(version)s/|'",
	"src/esmpy/util/cache_data.py",
])
_pre_test_cmds = ' && '.join([
#	_dataurlsed,
	"unset ESMPY_DATA_DIR",
    	"export ESMPY_DATA_NEW_DIR=%(installdir)s/esmf-test-data-%(version)s",
	''
])
components = [
	('esmf-test-data', version, {
		'easyblock': 'Binary',
		'source_urls': ['https://esmfweb.cgd.ucar.edu/download/data/'],
#		'start_dir': '%(installdir)s'
		'sources': [ 
			{'extract_cmd': 'cp %s .', 'download_filename': 'aggregAtlanticESTOFS.nc', 'filename': 'aggregAtlanticESTOFS.nc'},
			{'extract_cmd': 'cp %s .', 'download_filename': 'GRIDSPEC_ACCESS1.nc', 'filename': 'GRIDSPEC_ACCESS1.nc'},
			{'extract_cmd': 'cp %s .', 'download_filename': 'll1deg_grid.nc', 'filename': 'll1deg_grid.nc'},
			{'extract_cmd': 'cp %s .', 'download_filename': 'll2.5deg_grid.nc', 'filename': 'll2.5deg_grid.nc'},
			{'extract_cmd': 'cp %s .', 'download_filename': 'mpas_uniform_10242_dual_counterclockwise.nc',
				'filename': 'mpas_uniform_10242_dual_counterclockwise.nc'},
			{'extract_cmd': 'cp %s .', 'download_filename': 'so_Omon_GISS-E2.nc', 'filename': 'so_Omon_GISS-E2.nc'},
			{'extract_cmd': 'cp %s .', 'download_filename': 'T42_grid.nc', 'filename': 'T42_grid.nc'},
			{'extract_cmd': 'cp %s .', 'download_filename': 'ne4np4-pentagons.nc', 'filename': 'ne4np4-pentagons.nc'},
			{'extract_cmd': 'cp %s .', 'download_filename': 'ne4np4-esmf.nc', 'filename': 'ne4np4-esmf.nc'},
			{'extract_cmd': 'cp %s .', 'download_filename': 'ne30np4-t2.nc', 'filename': 'ne30np4-t2.nc'},
			{'extract_cmd': 'cp %s .', 'download_filename': 'll2.5deg_grid.nc', 'filename': 'll2.5deg_grid.nc'},
			{'extract_cmd': 'cp %s .', 'download_filename': 'gridspec1Dcoords.nc', 'filename': 'gridspec1Dcoords.nc'},
		],
		'checksums': [
			{'aggregAtlanticESTOFS.nc': 'a586c4669951ede99b90db1c6ace25fea5a1e9746c9c9b8f6e4babb2f5260ed1'},
			{'GRIDSPEC_ACCESS1.nc': 'efe0c2e93814a6601370adb695d51cd2e809fb21a4ca9e938d46dd909a988291'},
			{'ll1deg_grid.nc': 'cc4bbb0021ec748ebd3dacd0256f206f89660cb40e40326d653fdc8eb8c288f1'},
			{'ll2.5deg_grid.nc': 'f677e985b8827209830223709c8529ef4b88dde3d46d6a1abffa6a0d5213935b'},
			{'mpas_uniform_10242_dual_counterclockwise.nc':
				 'ba08a128057625683ee7f724ea56bd34ab11953a3b0a06316bd64f4c7fed1a2e'},
			{'so_Omon_GISS-E2.nc': '5ef1eae6b8a3bc6f0cb4bb495df306671fb58a8c8c51eb2dc422b9da14125af5'},
			{'T42_grid.nc': 'b7630bec03fa1b5f83dd0177a54634272846e268647c7405ccd1efb51da4f191'},
			{'ne4np4-pentagons.nc': '57eeef0cca36a249a86edcf9f65dc94cc9a8f1b48a639e251be4ffb0098a8269'},
			{'ne4np4-esmf.nc': '69e86d610345fce11241fa620426790c50f5850b6614bd650da82931a2f0396f'},
			{'ne30np4-t2.nc': '6264ffcbef835b77f12afa2eb8ae79131dadb9065fdf3d8b8e174db87e5bf3f5'},
			{'ll2.5deg_grid.nc': 'f677e985b8827209830223709c8529ef4b88dde3d46d6a1abffa6a0d5213935b'},
			{'gridspec1Dcoords.nc': '9f6f1511b60af59cd6709fc6dee49d13dc23c6d1761ed2fd702d4627f09f8ee1'},
		],
		'preinstallopts': 'mkdir -p %(installdir)s/%(name)s-%(version)s && ',
#		'postinstallcmds': 'for f in *.nc; do mv $f %(name)s-%(version)s/$(echo $f|cut -d"-" -f4)',
		'postinstallcmds': 'for f in *.nc; do cp $f %(installdir)s/%(name)s-%(version)s/. ; done',
	}),
]
exts_list = [
    ('esmpy', version, {
        'patches': ['ESMPy-%(version)s_use-static-version.patch'],
        'preinstallopts': "sed -i 's/EB_ESMPY_VERSION/%(version)s/' pyproject.toml && ",
        'pretestopts': _pre_test_cmds,
        'runtest': 'pytest',
        'source_urls': ['https://github.com/esmf-org/esmf/archive/'],
        'sources': ['v%(version)s.tar.gz'],
        'start_dir': 'src/addon/%(name)s',
        'testinstall': True,
        'checksums': [
            {'v8.8.0.tar.gz': 'f89327428aeef6ad34660b5b78f30d1c55ec67efb8f7df1991fdaa6b1eb3a27c'},
            {'ESMPy-8.8.0_use-static-version.patch':
             '38996acce11719f2fd2858a041221524c16ce83c8eb23e013ed26313bbcfd21b'},
        ],
    }),
]

# set data directory to a user-writable directory
# default: %(installdir)s/lib/python%(pyshortver)s/site-packages/esmpy/data
modextravars = {'ESMPY_DATA_DIR': '%(installdir)s/esmf-test-data-%(version)s'}

moduleclass = 'geo'
