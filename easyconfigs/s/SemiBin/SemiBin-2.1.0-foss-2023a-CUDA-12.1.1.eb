easyblock = 'PythonBundle'

name = 'SemiBin'
version = '2.1.0'
versionsuffix = '-CUDA-%(cudaver)s'

homepage = 'https://semibin.readthedocs.io'
description = "SemiBin: Metagenomic Binning Using Siamese Neural Networks for short and long reads"

toolchain = {'name': 'foss', 'version': '2023a'}

local_pytorch_ver = '2.1.2'

dependencies = [
    ('CUDA', '12.1.1', '', SYSTEM),
    ('Python', '3.11.3'),
    ('SciPy-bundle', '2023.07'),
    ('PyYAML', '6.0'),
    ('tqdm', '4.66.1'),
    ('scikit-learn', '1.3.1'),
    ('python-igraph', '0.11.4'),
    ('PyTorch', local_pytorch_ver, versionsuffix),
    ('PyTorch-bundle', local_pytorch_ver, versionsuffix),  # for torchvision & torchaudio
    ('BEDTools', '2.31.0'),
    ('HMMER', '3.4'),
    ('MMseqs2', '14-7e284'),
    ('prodigal', '2.6.3'),
    ('FragGeneScan', '1.31'),
    ('SAMtools', '1.18'),
]

use_pip = True

exts_list = [
    (name, version, {
        'modulename': 'SemiBin',
        'preinstallopts': "sed -i 's/python-igraph/igraph/g' setup.py && ",
        'source_urls': ['https://github.com/BigDataBiology/SemiBin/archive/'],
        'sources': ['v%(version)s.tar.gz'],
        'checksums': ['4d83033ccb1c00733118a29bd6bd9b046742a6dab186ce94ca2192c14870042b'],
    }),
]

sanity_check_paths = {
    'files': ['bin/SemiBin', 'bin/SemiBin2'],
    'dirs': ['lib/python%(pyshortver)s/site-packages'],
}

sanity_check_commands = [
    "SemiBin --help",
    "SemiBin2 --help",
]

sanity_pip_check = True

moduleclass = 'bio'
