easyblock = 'PythonBundle'

name = 'PyTorch'
version = '2.0.1'
versionsuffix = '-CUDA-%(cudaver)s'

homepage = 'https://pytorch.org/'
description = """Tensors and Dynamic neural networks in Python with strong GPU acceleration.
PyTorch is a deep learning framework that puts Python first."""

toolchain = {'name': 'foss', 'version': '2022a'}

dependencies = [
    ('CUDA', '11.7.0', '', SYSTEM),
    ('Ninja', '1.10.2'),  # Required for JIT compilation of C++ extensions
    ('Python', '3.10.4'),
    ('protobuf', '3.19.4'),
    ('protobuf-python', '3.19.4'),
    ('pybind11', '2.9.2'),
    ('SciPy-bundle', '2022.05'),
    ('PyYAML', '6.0'),
    ('MPFR', '4.1.0'),
    ('GMP', '6.2.1'),
    ('numactl', '2.0.14'),
    ('FFmpeg', '4.4.2'),
    ('Pillow', '9.1.1'),
    ('expecttest', '0.1.3'),
    ('sympy', '1.11.1'),
    ('networkx', '2.8.4'),
    ('cuDNN', '8.4.1.50', '-CUDA-%(cudaver)s', SYSTEM),
    ('magma', '2.6.2', '-CUDA-%(cudaver)s'),
    ('NCCL', '2.16.2', '-CUDA-%(cudaver)s'),
]

use_pip = True
sanity_pip_check = True

exts_list = [
    ('lit', '16.0.5', {
        'checksums': ['40b0224271f7832991874a6285e13da343963110f0d7c9c6e1e53f3ace901dc0'],
    }),
    ('cmake', '3.26.3', {
        'source_tmpl': '%(name)s-%(version)s-py2.py3-none-manylinux2014_x86_64.manylinux_2_17_x86_64.whl',
        'checksums': ['1bc7b47456256bdcc41069f5c658f232bd6e15bf4796d115f6ec98800793daff'],
    }),
    ('triton', '2.0.0', {
        'source_tmpl': '%(name)s-%(version)s-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl',
        'checksums': ['8f05a7e64e4ca0565535e3d5d3405d7e49f9d308505bb7773d21fb26a4c008c2'],
    }),
    ('torch', version, {
        'source_tmpl': 'torch-%(version)s%2Bcu117-cp310-cp310-linux_x86_64.whl',
        'source_urls': ['https://download.pytorch.org/whl/cu117'],
        'checksums': ['bb54b705185bea820e6ec6485a25761bc03f689e1a09a37d814d6ea8e276b5bd'],
    }),
]

sanity_check_commands = [
    'python -c "import torch; print(torch._C._cuda_getArchFlags())"',
    'python -c "import torch; print(torch.cuda.device_count())"',
]

moduleclass = 'ai'
