easyblock = 'MakeCp'

name = 'TRUST4'
version = '1.1.6.1'

homepage = 'https://github.com/liulab-dfci/TRUST4'
description = """Tcr Receptor Utilities for Solid Tissue (TRUST) is a
computational tool to analyze TCR and BCR sequences using unselected RNA
sequencing data, profiled from solid tissues, including tumors. TRUST4 performs
de novo assembly on V, J, C genes including the hypervariable
complementarity-determining region 3 (CDR3) and reports consensus of BCR/TCR
sequences. TRUST4 then realigns the contigs to IMGT reference gene sequences to
report the corresponding information. TRUST4 supports both single-end and
paired-end sequencing data with any read length."""

toolchain = {'name': 'GCC', 'version': '13.3.0'}

source_urls = [GITHUB_SOURCE]
sources = ['v%(version)s.tar.gz']
checksums = ['036cd63925df864affaeb90e01c97cc2e0565cb0bfe2b574950547c43dabc0d5']

# TRUST4 uses an old API of SAMtools and links agains libbam.a, that has been
# removed in SAMtools 1.14 (https://github.com/liulab-dfci/TRUST4/issues/95).
# For this reason, we use the SAMtools bundled by TRUST4.
builddependencies = [
    ('binutils', '2.42'),
]
dependencies = [
    ('Python', '3.12.3'),
    ('Perl', '5.38.2'),
]

fix_perl_shebang_for = ['bin/*.pl']
fix_python_shebang_for = ['bin/*.py']
github_account = 'liulab-dfci'
postinstallcmds = ['chmod a+x %(installdir)s/bin/*']
files_to_copy = [
    (['run-%(namelower)s', '%(namelower)s', 'bam-extractor', 'fastq-extractor', 'annotator', 'BuildDatabaseFa.pl',
        'BuildImgtAnnot.pl', 'BuildImgtVquestAnnot.pl', 'FilterAnnotatedAssembly.pl', 'trust-airr.pl',
        'trust-barcoderep.pl', 'trust-simplerep.pl', 'trust-smartseq.pl'], 'bin'),
    (['scripts/AddSequenceToCDR3File.pl', 'scripts/barcoderep-filter.py', 'scripts/GetFullLengthAssembly.pl',
        'scripts/trust-barcoderep-to-10X.pl', 'scripts/trust-cluster.py', 'scripts/trust-stats.py'], 'bin'),
]

sanity_check_paths = {
    'files': [
        'bin/run-%(namelower)s', 'bin/%(namelower)s',
        'bin/bam-extractor', 'bin/fastq-extractor', 'bin/annotator',
        'bin/BuildDatabaseFa.pl',
        'bin/BuildImgtAnnot.pl', 'bin/BuildImgtVquestAnnot.pl',
        'bin/FilterAnnotatedAssembly.pl', 'bin/trust-airr.pl',
        'bin/trust-barcoderep.pl', 'bin/trust-simplerep.pl',
        'bin/trust-smartseq.pl', 'bin/AddSequenceToCDR3File.pl',
        'bin/barcoderep-filter.py',
        'bin/GetFullLengthAssembly.pl', 'bin/trust-barcoderep-to-10X.pl',
        'bin/trust-cluster.py', 'bin/trust-stats.py'
    ],
    'dirs': [],
}

sanity_check_commands = [
    "run-%(namelower)s 2>&1 | grep '%(name)s v%(version)s'",
    "BuildDatabaseFa.pl 2>&1 | grep 'usage: perl BuildDatabaseFa.pl'",
    "trust-cluster.py 2>&1 | grep 'usage: a.py trust_cdr3.out'",
    """cd %(builddir)s/%(name)s-%(version)s \
    && run-%(namelower)s -b example/example.bam -f hg38_bcrtcr.fa --ref human_IMGT+C.fa \
    && test -f example/TRUST_example_report.tsv""",
]

moduleclass = 'bio'
