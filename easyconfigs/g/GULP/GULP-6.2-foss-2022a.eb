# Contribution from Imperial College London / UK 
# Based on GULP-6.0-foss-2020b.eb 

easyblock = 'MakeCp'

name = 'GULP'
version = '6.2'

homepage = 'https://gulp.curtin.edu.au/gulp/'
description = """GULP is a program for performing a variety of types of simulation on materials
 using boundary conditions of 0-D (molecules and clusters), 1-D (polymers), 2-D (surfaces, slabs
 and grain boundaries), or 3-D (periodic solids)Band Unfolding code for Plane-wave based calculations"""

toolchain = {'name': 'foss', 'version': '2022a'}
toolchainopts = {'usempi': True}

sources = [SOURCELOWER_TGZ]
patches = [
     'GULP-6.2_fftw-mpi-blas-linking-gcc.patch',
]
checksums = [
    {'gulp-6.2.tgz': '6058968723ce2768db8e25e51b495365a1c62f48150040177e1f7fe94b469842'},
    {'GULP-6.2_fftw-mpi-blas-linking-gcc.patch': 'b126e8cafbc92eb95c8d756b3001ff6d55ea1abfe4fc9f0c45325846dc0a9c04'},
]

dependencies = [
    ('PLUMED', '2.8.1'),
]

start_dir = 'Src'

# Use external FFTW (-f), enable parallel/MPI build (-m) and set the PLUMED plugin (-p).
# Building it this way means both the serial and parallel build are available.
# The serial build can be used like this:
# $ gulp < FILE.gin > OUT.gout
# For the parallel run, just add mpirun:
# $ mpirun -n X gulp < FILE.gin > OUT.gout

build_cmd = "./mkgulp -mfp"

files_to_copy = [
    (['gulp'], 'bin'),
    (['../Docs', '../Examples', '../Libraries', '../Utils'], ''),
]

sanity_check_paths = {
    'files': ['bin/gulp'],
    'dirs': ['Docs', 'Examples', 'Libraries', 'Utils'],
}

modextrapaths = {
    'GULP_LIB': 'Libraries',
    'GULP_DOC': 'Docs',
    'GULP_EXAMPLES': 'Examples',
    'GULP_UTILS': 'Utils',
}

moduleclass = 'chem'
