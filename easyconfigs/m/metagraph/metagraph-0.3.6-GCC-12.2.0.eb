easyblock = 'CMakeMake'

name = 'metagraph'
version = '0.3.6'
_alphabet = 'DNA'

homepage = 'https://metagraph.ethz.ch/'
description = """The MetaGraph framework allows for indexing and analysis of very large biological sequence collection,
producing compressed indexes that can represent several petabases of input data.
The indexes can be efficiently queried with any query sequence of interest"""


toolchain = {'name': 'GCC', 'version': '12.2.0'}
toolchainopts = {
    'openmp': True, 
    'optarch': False,
#    'vectorize': False,
    'lto': True,
    'extra_cxxflags': """-Wno-error=deprecated-declarations \
        -Wno-error=maybe-uninitialized """ }

github_account = 'ratschlab'
sources = [
    {
        'filename': '%(name)s-v%(version)s.tar.gz',
        'download_filename': 'v%(version)s-sources-with-submodules.tar.gz',
        'git_config': {
            'url': 'https://github.com/%(github_account)s/',
            'repo_name': '%(name)s',
            'tag': 'v%(version)s',
            'recursive': True,
        }
    },
]
patches = [
    ('cmake.patch', '%(name)s/%(name)s')
]
checksums = [
    {'metagraph-v0.3.6.tar.gz': '1dd31c2a27db2d62487474cf3e106c86720406cbaecbb038d8165e752e0669c9'},
]

builddependencies = [
    ('CMake', '3.24.3'),
    ('pkgconf', '1.9.3'),
    ('LLVM', '15.0.5')
]

dependencies = [
    ('JsonCpp', '1.9.5'),
    ('Boost', '1.81.0'),
    ('HTSlib', '1.17'),
    ('sdsl-lite', '2.1.1'),
    ('jemalloc', '5.3.0'),
    ('Python', '3.10.8'),
#    ('SWIG', '4.1.1'),
#    ('googletest', '1.12.1')
]

start_dir = '%(name)s'

configopts = ( 
#    '-DBUILD_KMC=ON'
    ' -DCMAKE_DBG_ALPHABET=' + _alphabet
    + ' -DJSONCPPDIR=$EBROOTJSONCPP'
    + ' -DZLIBDIR=$EBROOTZLIB'
#    '-DSDSLDIR=$EBROOTSDSL'
    + ' -DCMAKE_CXX_FLAGS_RELEASE=\"-O2 -DNDEBUG \" '
)
#    -DPYTHON_INTERFACE=Y \

separate_build_dir = True

_localFiles = ['%(name)s_%(alphabet)s'
    'libfbvector.a',        
    'libmersenne_twister.a',
    'libprogress_bar.a',
    'external-libraries',
    'test-venv',
    'KMC',
    '%(name)s',
    'libmetagraph-cli.a',     
    'libmetagraph-core.a'  
]

files_to_copy = ['%(name)s', (['%s' % x for x in _localFiles])]

sanity_check_paths = {
    'files': ['bin/%s_%s' % (name, _alphabet)],
    'dirs': ['bin']
}

sanity_check_commands = [
    'metagraph_DNA --version',
    ". test-venv/bin/activate && python -c 'import metagraph'"
]

moduleclass = 'bio'
